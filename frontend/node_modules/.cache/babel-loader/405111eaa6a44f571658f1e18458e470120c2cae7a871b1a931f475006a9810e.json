{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import\"./UpdatePassword.css\";// Determine the base URL dynamically\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const baseURL=(()=>{const{hostname}=window.location;if(hostname===\"127.0.0.1\"||hostname===\"localhost\"){return\"http://127.0.0.1:5000\";}else if(hostname.includes(\"johnnygardner.co.uk\")){return\"https://www.johnnygardner.co.uk\";}else{return\"https://noshly.onrender.com\";}})();function UpdatePassword(){const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[error,setError]=useState(\"\");const[success,setSuccess]=useState(\"\");const navigate=useNavigate();const location=useLocation();// Extract the token from the URL\nconst token=new URLSearchParams(location.search).get(\"token\");// Form validation\nconst isFormValid=password&&confirmPassword&&password.length>=8&&password===confirmPassword;const handleUpdatePassword=async e=>{e.preventDefault();setError(\"\");setSuccess(\"\");if(!token){setError(\"Invalid or missing reset token.\");return;}if(password!==confirmPassword){setError(\"Passwords do not match.\");return;}try{const response=await fetch(`${baseURL}/update_password`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({token,new_password:password})});if(response.ok){setSuccess(\"Password updated successfully. Redirecting to login...\");setTimeout(()=>navigate(\"/login\"),3000);}else{const errorData=await response.json();setError(errorData.error||\"Failed to update password.\");}}catch(err){setError(\"Network error. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"update-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Your Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdatePassword,id:\"update-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input-field\",placeholder:\"New Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input-field\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"update-button\",disabled:!isFormValid,children:\"Update Password\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsx(\"div\",{className:\"updatePageLinks\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Back to Login\"})})]});}export default UpdatePassword;","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","baseURL","hostname","window","location","includes","UpdatePassword","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","navigate","token","URLSearchParams","search","get","isFormValid","length","handleUpdatePassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_password","ok","setTimeout","errorData","json","err","className","children","onSubmit","id","type","placeholder","value","onChange","target","required","disabled","href"],"sources":["C:/Users/johnn/Documents/Noshly/frontend/src/pages/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./UpdatePassword.css\";\r\n\r\n// Determine the base URL dynamically\r\nconst baseURL = (() => {\r\n    const { hostname } = window.location;\r\n    if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n        return \"http://127.0.0.1:5000\";\r\n    } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n        return \"https://www.johnnygardner.co.uk\";\r\n    } else {\r\n        return \"https://noshly.onrender.com\";\r\n    }\r\n})();\r\n\r\nfunction UpdatePassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Extract the token from the URL\r\n  const token = new URLSearchParams(location.search).get(\"token\");\r\n\r\n  // Form validation\r\n  const isFormValid = password && confirmPassword && password.length >= 8 && password === confirmPassword;\r\n\r\n  const handleUpdatePassword = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!token) {\r\n      setError(\"Invalid or missing reset token.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${baseURL}/update_password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token, new_password: password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess(\"Password updated successfully. Redirecting to login...\");\r\n        setTimeout(() => navigate(\"/login\"), 3000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || \"Failed to update password.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Network error. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-container\">\r\n      <h2>Reset Your Password</h2>\r\n      <form onSubmit={handleUpdatePassword} id=\"update-form\">\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"New Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"update-button\" disabled={!isFormValid}>\r\n          Update Password\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {success && <div className=\"success-message\">{success}</div>}\r\n      <div className=\"updatePageLinks\">\r\n        <a href=\"/login\">Back to Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}