{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\Documents\\\\SaaS%20Product\\\\Python\\\\saas-frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = (() => {\n  const {\n    hostname\n  } = window.location;\n  if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\n    return \"http://127.0.0.1:5000\";\n  } else if (hostname.includes(\"johnnygardner.co.uk\")) {\n    return \"https://www.johnnygardner.co.uk\";\n  } else {\n    return \"https://saas-application.onrender.com\";\n  }\n})();\nconst allergyOptions = [\"Dairy\", \"Gluten\", \"Peanuts\", \"Shellfish\", \"Soy\", \"Tree Nuts\", \"Eggs\", \"Fish\"];\nconst dietaryOptions = [\"Vegetarian\", \"Vegan\", \"Keto\", \"High-Protein\", \"Pescatarian\", \"Low-Carb\", \"Take-Out Style\"];\nfunction RegisterPage() {\n  _s();\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [allergies, setAllergies] = useState([]);\n  const [dietaryPreferences, setDietaryPreferences] = useState([]);\n  const navigate = useNavigate();\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\n  const isFormValid = firstname && lastname && email && password && passwordConfirm && isEmailValid && password === passwordConfirm;\n  const handleCheckboxChange = (setFunction, values, value) => {\n    setFunction(values.includes(value) ? values.filter(v => v !== value) : [...values, value]);\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(`${baseURL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstname,\n          lastname,\n          email,\n          password,\n          allergies,\n          dietaryPreferences\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"authToken\", data.token);\n        navigate(\"/dashboard\");\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || \"Registration failed.\");\n      }\n    } catch (err) {\n      setError(\"Network error. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      id: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"First Name\",\n        value: firstname,\n        onChange: e => setFirstname(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Last Name\",\n        value: lastname,\n        onChange: e => setLastname(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"input-field\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Confirm Password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), allergyOptions.map(allergy => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: allergy,\n            checked: allergies.includes(allergy),\n            onChange: () => handleCheckboxChange(setAllergies, allergies, allergy)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), allergy]\n        }, allergy, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dietary Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), dietaryOptions.map(diet => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: diet,\n            checked: dietaryPreferences.includes(diet),\n            onChange: () => handleCheckboxChange(setDietaryPreferences, dietaryPreferences, diet)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), diet]\n        }, diet, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        disabled: !isFormValid,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error-message\",\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"PajlDKBD3Yc7VhfdkRYve4IVrqY=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","baseURL","hostname","window","location","includes","allergyOptions","dietaryOptions","RegisterPage","_s","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","allergies","setAllergies","dietaryPreferences","setDietaryPreferences","navigate","isEmailValid","match","isFormValid","handleCheckboxChange","setFunction","values","value","filter","v","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","errorData","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","onChange","target","required","map","allergy","checked","diet","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/johnn/Documents/SaaS%20Product/Python/saas-frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './RegisterPage.css';\r\n\r\nconst baseURL = (() => {\r\n    const { hostname } = window.location;\r\n    if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n        return \"http://127.0.0.1:5000\";\r\n    } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n        return \"https://www.johnnygardner.co.uk\";\r\n    } else {\r\n        return \"https://saas-application.onrender.com\";\r\n    }\r\n})();\r\n\r\nconst allergyOptions = [\"Dairy\", \"Gluten\", \"Peanuts\", \"Shellfish\", \"Soy\", \"Tree Nuts\", \"Eggs\", \"Fish\"];\r\nconst dietaryOptions = [\"Vegetarian\", \"Vegan\", \"Keto\", \"High-Protein\", \"Pescatarian\", \"Low-Carb\", \"Take-Out Style\"];\r\n\r\nfunction RegisterPage() {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [allergies, setAllergies] = useState([]);\r\n  const [dietaryPreferences, setDietaryPreferences] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\r\n  const isFormValid = firstname && lastname && email && password && passwordConfirm && isEmailValid && password === passwordConfirm;\r\n\r\n  const handleCheckboxChange = (setFunction, values, value) => {\r\n    setFunction(values.includes(value) ? values.filter(v => v !== value) : [...values, value]);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(`${baseURL}/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ firstname, lastname, email, password, allergies, dietaryPreferences }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem(\"authToken\", data.token);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || \"Registration failed.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Network error. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleRegister} id=\"register-form\">\r\n        <input type=\"text\" className=\"input-field\" placeholder=\"First Name\" value={firstname} onChange={(e) => setFirstname(e.target.value)} required />\r\n        <input type=\"text\" className=\"input-field\" placeholder=\"Last Name\" value={lastname} onChange={(e) => setLastname(e.target.value)} required />\r\n        <input type=\"email\" className=\"input-field\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" className=\"input-field\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        <input type=\"password\" className=\"input-field\" placeholder=\"Confirm Password\" value={passwordConfirm} onChange={(e) => setPasswordConfirm(e.target.value)} required />\r\n\r\n        <div className=\"checkbox-group\">\r\n          <label>Allergies:</label>\r\n          {allergyOptions.map((allergy) => (\r\n            <label key={allergy}>\r\n              <input type=\"checkbox\" value={allergy} checked={allergies.includes(allergy)} onChange={() => handleCheckboxChange(setAllergies, allergies, allergy)} />\r\n              {allergy}\r\n            </label>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"checkbox-group\">\r\n          <label>Dietary Preferences:</label>\r\n          {dietaryOptions.map((diet) => (\r\n            <label key={diet}>\r\n              <input type=\"checkbox\" value={diet} checked={dietaryPreferences.includes(diet)} onChange={() => handleCheckboxChange(setDietaryPreferences, dietaryPreferences, diet)} />\r\n              {diet}\r\n            </label>\r\n          ))}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"button\" disabled={!isFormValid}>Register</button>\r\n      </form>\r\n      {error && <div id=\"error-message\" className=\"error-message\">{error}</div>}\r\n      <div className=\"links\">\r\n        <a href=\"/login\">Already have an account? Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAG,CAAC,MAAM;EACnB,MAAM;IAAEC;EAAS,CAAC,GAAGC,MAAM,CAACC,QAAQ;EACpC,IAAIF,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW,EAAE;IACtD,OAAO,uBAAuB;EAClC,CAAC,MAAM,IAAIA,QAAQ,CAACG,QAAQ,CAAC,qBAAqB,CAAC,EAAE;IACjD,OAAO,iCAAiC;EAC5C,CAAC,MAAM;IACH,OAAO,uCAAuC;EAClD;AACJ,CAAC,EAAE,CAAC;AAEJ,MAAMC,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC;AACtG,MAAMC,cAAc,GAAG,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,gBAAgB,CAAC;AAEnH,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM6B,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAE9B,MAAM6B,YAAY,GAAGb,KAAK,CAACc,KAAK,CAAC,cAAc,CAAC;EAChD,MAAMC,WAAW,GAAGnB,SAAS,IAAIE,QAAQ,IAAIE,KAAK,IAAIE,QAAQ,IAAIE,eAAe,IAAIS,YAAY,IAAIX,QAAQ,KAAKE,eAAe;EAEjI,MAAMY,oBAAoB,GAAGA,CAACC,WAAW,EAAEC,MAAM,EAAEC,KAAK,KAAK;IAC3DF,WAAW,CAACC,MAAM,CAAC3B,QAAQ,CAAC4B,KAAK,CAAC,GAAGD,MAAM,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKF,KAAK,CAAC,GAAG,CAAC,GAAGD,MAAM,EAAEC,KAAK,CAAC,CAAC;EAC5F,CAAC;EAED,MAAMG,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBjB,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGvC,OAAO,WAAW,EAAE;QAClDwC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnC,SAAS;UAAEE,QAAQ;UAAEE,KAAK;UAAEE,QAAQ;UAAEM,SAAS;UAAEE;QAAmB,CAAC;MAC9F,CAAC,CAAC;MAEF,IAAIe,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,KAAK,CAAC;QAC7CzB,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACL,MAAM0B,SAAS,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC3B,QAAQ,CAAC+B,SAAS,CAAChC,KAAK,IAAI,sBAAsB,CAAC;MACrD;IACF,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZhC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsD,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCvD,OAAA;MAAAuD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3D,OAAA;MAAM4D,QAAQ,EAAExB,cAAe;MAACyB,EAAE,EAAC,eAAe;MAAAN,QAAA,gBAChDvD,OAAA;QAAO8D,IAAI,EAAC,MAAM;QAACR,SAAS,EAAC,aAAa;QAACS,WAAW,EAAC,YAAY;QAAC9B,KAAK,EAAEvB,SAAU;QAACsD,QAAQ,EAAG3B,CAAC,IAAK1B,YAAY,CAAC0B,CAAC,CAAC4B,MAAM,CAAChC,KAAK,CAAE;QAACiC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChJ3D,OAAA;QAAO8D,IAAI,EAAC,MAAM;QAACR,SAAS,EAAC,aAAa;QAACS,WAAW,EAAC,WAAW;QAAC9B,KAAK,EAAErB,QAAS;QAACoD,QAAQ,EAAG3B,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAAC4B,MAAM,CAAChC,KAAK,CAAE;QAACiC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7I3D,OAAA;QAAO8D,IAAI,EAAC,OAAO;QAACR,SAAS,EAAC,aAAa;QAACS,WAAW,EAAC,OAAO;QAAC9B,KAAK,EAAEnB,KAAM;QAACkD,QAAQ,EAAG3B,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAAC4B,MAAM,CAAChC,KAAK,CAAE;QAACiC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpI3D,OAAA;QAAO8D,IAAI,EAAC,UAAU;QAACR,SAAS,EAAC,aAAa;QAACS,WAAW,EAAC,UAAU;QAAC9B,KAAK,EAAEjB,QAAS;QAACgD,QAAQ,EAAG3B,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAAC4B,MAAM,CAAChC,KAAK,CAAE;QAACiC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChJ3D,OAAA;QAAO8D,IAAI,EAAC,UAAU;QAACR,SAAS,EAAC,aAAa;QAACS,WAAW,EAAC,kBAAkB;QAAC9B,KAAK,EAAEf,eAAgB;QAAC8C,QAAQ,EAAG3B,CAAC,IAAKlB,kBAAkB,CAACkB,CAAC,CAAC4B,MAAM,CAAChC,KAAK,CAAE;QAACiC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEtK3D,OAAA;QAAKsD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvD,OAAA;UAAAuD,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxBrD,cAAc,CAAC6D,GAAG,CAAEC,OAAO,iBAC1BpE,OAAA;UAAAuD,QAAA,gBACEvD,OAAA;YAAO8D,IAAI,EAAC,UAAU;YAAC7B,KAAK,EAAEmC,OAAQ;YAACC,OAAO,EAAE/C,SAAS,CAACjB,QAAQ,CAAC+D,OAAO,CAAE;YAACJ,QAAQ,EAAEA,CAAA,KAAMlC,oBAAoB,CAACP,YAAY,EAAED,SAAS,EAAE8C,OAAO;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACtJS,OAAO;QAAA,GAFEA,OAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN3D,OAAA;QAAKsD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvD,OAAA;UAAAuD,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAClCpD,cAAc,CAAC4D,GAAG,CAAEG,IAAI,iBACvBtE,OAAA;UAAAuD,QAAA,gBACEvD,OAAA;YAAO8D,IAAI,EAAC,UAAU;YAAC7B,KAAK,EAAEqC,IAAK;YAACD,OAAO,EAAE7C,kBAAkB,CAACnB,QAAQ,CAACiE,IAAI,CAAE;YAACN,QAAQ,EAAEA,CAAA,KAAMlC,oBAAoB,CAACL,qBAAqB,EAAED,kBAAkB,EAAE8C,IAAI;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACxKW,IAAI;QAAA,GAFKA,IAAI;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN3D,OAAA;QAAQ8D,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,QAAQ;QAACiB,QAAQ,EAAE,CAAC1C,WAAY;QAAA0B,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,EACNvC,KAAK,iBAAIpB,OAAA;MAAK6D,EAAE,EAAC,eAAe;MAACP,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEnC;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzE3D,OAAA;MAAKsD,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBvD,OAAA;QAAGwE,IAAI,EAAC,QAAQ;QAAAjB,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClD,EAAA,CAlFQD,YAAY;EAAA,QASFV,WAAW;AAAA;AAAA2E,EAAA,GATrBjE,YAAY;AAoFrB,eAAeA,YAAY;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}