{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\Documents\\\\SaaS%20Product\\\\Python\\\\saas-frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './ResetPassword.css';\n\n// Determine the base URL dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = (() => {\n  const {\n    hostname\n  } = window.location;\n  if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\n    return \"http://127.0.0.1:5000\";\n  } else if (hostname.includes(\"johnnygardner.co.uk\")) {\n    return \"https://www.johnnygardner.co.uk\";\n  } else {\n    return \"https://saas-application.onrender.com\";\n  }\n})();\nfunction ResetPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Email validation pattern\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\n  const isFormValid = email && isEmailValid;\n  const handleResetRequest = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      const response = await fetch(`${baseURL}/resetpassword`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setMessage(\"If this email exists, a reset link has been sent.\");\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || \"Something went wrong.\");\n      }\n    } catch (err) {\n      setError(\"Network error. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your email to receive a password reset link.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetRequest,\n      id: \"reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        className: \"input-field\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-button\",\n        disabled: !isFormValid,\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"success-message\",\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error-message\",\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetPageLinks\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"SE5ZArZMyWDC01UkEwtf2Y6GhnU=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","baseURL","hostname","window","location","includes","ResetPassword","_s","email","setEmail","message","setMessage","error","setError","navigate","isEmailValid","match","isFormValid","handleResetRequest","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","value","onChange","target","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/johnn/Documents/SaaS%20Product/Python/saas-frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './ResetPassword.css';\r\n\r\n// Determine the base URL dynamically\r\nconst baseURL = (() => {\r\n    const { hostname } = window.location;\r\n    if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n        return \"http://127.0.0.1:5000\";\r\n    } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n        return \"https://www.johnnygardner.co.uk\";\r\n    } else {\r\n        return \"https://saas-application.onrender.com\";\r\n    }\r\n})();\r\n\r\nfunction ResetPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Email validation pattern\r\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\r\n  const isFormValid = email && isEmailValid;\r\n\r\n  const handleResetRequest = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(`${baseURL}/resetpassword`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage(\"If this email exists, a reset link has been sent.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || \"Something went wrong.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Network error. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <h2>Reset Password</h2>\r\n      <p>Enter your email to receive a password reset link.</p>\r\n      <form onSubmit={handleResetRequest} id=\"reset-form\">\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          className=\"input-field\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"reset-button\" disabled={!isFormValid}>\r\n          Send Reset Link\r\n        </button>\r\n      </form>\r\n      {message && <div id=\"success-message\" className=\"success-message\">{message}</div>}\r\n      {error && <div id=\"error-message\" className=\"error-message\">{error}</div>}\r\n      <div className=\"resetPageLinks\">\r\n        <a href=\"/login\">Back to Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}