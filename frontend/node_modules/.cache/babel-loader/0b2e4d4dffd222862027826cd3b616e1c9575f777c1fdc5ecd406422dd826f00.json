{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\Documents\\\\SaaS%20Product\\\\Python\\\\saas-frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\n// Determine the base URL dynamically\nconst baseURL = (() => {\n  const {\n    hostname\n  } = window.location;\n  if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\n    return \"http://127.0.0.1:5000\";\n  } else if (hostname.includes(\"johnnygardner.co.uk\")) {\n    return \"https://www.johnnygardner.co.uk\";\n  } else {\n    return \"https://saas-application.onrender.com\";\n  }\n})();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './common.css'; // Add custom CSS for styling\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Email validation pattern\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\n  const isFormValid = firstname && lastname && email && password && passwordConfirm && isEmailValid && password === passwordConfirm;\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError(\"\"); // Reset error state on each submit\n\n    // Prepare the data for submission\n    const data = {\n      firstname,\n      lastname,\n      email,\n      password\n    };\n    try {\n      const response = await fetch(`${baseURL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Store the JWT token in localStorage\n        localStorage.setItem(\"token\", result.token);\n\n        // Redirect to the dashboard or another page\n        navigate(\"/dashboard\");\n      } else {\n        setError(result.error || \"An error occurred. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"Network error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      id: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstname\",\n        className: \"input-field\",\n        placeholder: \"First Name\",\n        value: firstname,\n        onChange: e => setFirstname(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lastname\",\n        className: \"input-field\",\n        placeholder: \"Last Name\",\n        value: lastname,\n        onChange: e => setLastname(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        className: \"input-field\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"input-field\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password_confirm\",\n        className: \"input-field\",\n        placeholder: \"Confirm Password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        disabled: !isFormValid,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error-message\",\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"foCNkzpvFqosQJ2hM/brw3nky8w=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["baseURL","hostname","window","location","includes","React","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","navigate","isEmailValid","match","isFormValid","handleRegister","e","preventDefault","data","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","token","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","value","onChange","target","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/johnn/Documents/SaaS%20Product/Python/saas-frontend/src/pages/RegisterPage.js"],"sourcesContent":["// Determine the base URL dynamically\r\nconst baseURL = (() => {\r\n    const { hostname } = window.location;\r\n    if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n        return \"http://127.0.0.1:5000\";\r\n    } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n        return \"https://www.johnnygardner.co.uk\";\r\n    } else {\r\n        return \"https://saas-application.onrender.com\";\r\n    }\r\n})();\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './common.css'; // Add custom CSS for styling\r\nimport './RegisterPage.css';\r\n\r\nfunction RegisterPage() {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Email validation pattern\r\n  const isEmailValid = email.match(/\\S+@\\S+\\.\\S+/);\r\n  const isFormValid = firstname && lastname && email && password && passwordConfirm && isEmailValid && password === passwordConfirm;\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Reset error state on each submit\r\n\r\n    // Prepare the data for submission\r\n    const data = {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseURL}/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Store the JWT token in localStorage\r\n        localStorage.setItem(\"token\", result.token);\r\n\r\n        // Redirect to the dashboard or another page\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        setError(result.error || \"An error occurred. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Network error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleRegister} id=\"register-form\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"firstname\"\r\n          className=\"input-field\"\r\n          placeholder=\"First Name\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          id=\"lastname\"\r\n          className=\"input-field\"\r\n          placeholder=\"Last Name\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          className=\"input-field\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"password_confirm\"\r\n          className=\"input-field\"\r\n          placeholder=\"Confirm Password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"button\" disabled={!isFormValid}>\r\n          Register\r\n        </button>\r\n      </form>\r\n      {error && <div id=\"error-message\" className=\"error-message\">{error}</div>}\r\n      <div className=\"links\">\r\n        <a href=\"/login\">Already have an account? Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA;AACA,MAAMA,OAAO,GAAG,CAAC,MAAM;EACnB,MAAM;IAAEC;EAAS,CAAC,GAAGC,MAAM,CAACC,QAAQ;EACpC,IAAIF,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW,EAAE;IACtD,OAAO,uBAAuB;EAClC,CAAC,MAAM,IAAIA,QAAQ,CAACG,QAAQ,CAAC,qBAAqB,CAAC,EAAE;IACjD,OAAO,iCAAiC;EAC5C,CAAC,MAAM;IACH,OAAO,uCAAuC;EAClD;AACJ,CAAC,EAAE,CAAC;AAEJ,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc,CAAC,CAAC;AACvB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMkB,YAAY,GAAGT,KAAK,CAACU,KAAK,CAAC,cAAc,CAAC;EAChD,MAAMC,WAAW,GAAGf,SAAS,IAAIE,QAAQ,IAAIE,KAAK,IAAIE,QAAQ,IAAIE,eAAe,IAAIK,YAAY,IAAIP,QAAQ,KAAKE,eAAe;EAEjI,MAAMQ,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEd;IACA,MAAMQ,IAAI,GAAG;MACXnB,SAAS;MACTE,QAAQ;MACRE,KAAK;MACLE;IACF,CAAC;IAED,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjC,OAAO,WAAW,EAAE;QAClDkC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,MAAM,CAACK,KAAK,CAAC;;QAE3C;QACApB,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLD,QAAQ,CAACgB,MAAM,CAACjB,KAAK,IAAI,sCAAsC,CAAC;MAClE;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZtB,QAAQ,CAAC,iBAAiB,GAAGsB,GAAG,CAACC,OAAO,CAAC;IAC3C;EACF,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCvC,OAAA;MAAAuC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3C,OAAA;MAAM4C,QAAQ,EAAEzB,cAAe;MAAC0B,EAAE,EAAC,eAAe;MAAAN,QAAA,gBAChDvC,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXD,EAAE,EAAC,WAAW;QACdP,SAAS,EAAC,aAAa;QACvBS,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAE7C,SAAU;QACjB8C,QAAQ,EAAG7B,CAAC,IAAKhB,YAAY,CAACgB,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC9CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXD,EAAE,EAAC,UAAU;QACbP,SAAS,EAAC,aAAa;QACvBS,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE3C,QAAS;QAChB4C,QAAQ,EAAG7B,CAAC,IAAKd,WAAW,CAACc,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QACE8C,IAAI,EAAC,OAAO;QACZD,EAAE,EAAC,OAAO;QACVP,SAAS,EAAC,aAAa;QACvBS,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEzC,KAAM;QACb0C,QAAQ,EAAG7B,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QACE8C,IAAI,EAAC,UAAU;QACfD,EAAE,EAAC,UAAU;QACbP,SAAS,EAAC,aAAa;QACvBS,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvC,QAAS;QAChBwC,QAAQ,EAAG7B,CAAC,IAAKV,WAAW,CAACU,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QACE8C,IAAI,EAAC,UAAU;QACfD,EAAE,EAAC,kBAAkB;QACrBP,SAAS,EAAC,aAAa;QACvBS,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAErC,eAAgB;QACvBsC,QAAQ,EAAG7B,CAAC,IAAKR,kBAAkB,CAACQ,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QACpDG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3C,OAAA;QAAQ8C,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,QAAQ;QAACc,QAAQ,EAAE,CAAClC,WAAY;QAAAqB,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACN9B,KAAK,iBAAIb,OAAA;MAAK6C,EAAE,EAAC,eAAe;MAACP,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE1B;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzE3C,OAAA;MAAKsC,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBvC,OAAA;QAAGqD,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CA7GQD,YAAY;EAAA,QAOFH,WAAW;AAAA;AAAAwD,EAAA,GAPrBrD,YAAY;AA+GrB,eAAeA,YAAY;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}