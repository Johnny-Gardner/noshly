{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\Documents\\\\Noshly\\\\frontend\\\\src\\\\pages\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./UpdatePassword.css\";\n\n// Determine the base URL dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = (() => {\n  const {\n    hostname\n  } = window.location;\n  if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\n    return \"http://127.0.0.1:5000\";\n  } else if (hostname.includes(\"johnnygardner.co.uk\")) {\n    return \"https://www.johnnygardner.co.uk\";\n  } else {\n    return \"https://noshly.onrender.com\";\n  }\n})();\nfunction UpdatePassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract the token from the URL\n  const token = new URLSearchParams(location.search).get(\"token\");\n\n  // Form validation\n  const isFormValid = password && confirmPassword && password.length >= 8 && password === confirmPassword;\n  const handleUpdatePassword = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!token) {\n      setError(\"Invalid or missing reset token.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${baseURL}/update_password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token,\n          new_password: password\n        })\n      });\n      if (response.ok) {\n        setSuccess(\"Password updated successfully. Redirecting to login...\");\n        setTimeout(() => navigate(\"/login\"), 3000);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || \"Failed to update password.\");\n      }\n    } catch (err) {\n      setError(\"Network error. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdatePassword,\n      id: \"update-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"update-button\",\n        disabled: !isFormValid,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updatePageLinks\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdatePassword, \"mxi+IhEVAvi+vNWWoMZMDi6sBrY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","baseURL","hostname","window","location","includes","UpdatePassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","navigate","token","URLSearchParams","search","get","isFormValid","length","handleUpdatePassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_password","ok","setTimeout","errorData","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","value","onChange","target","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/johnn/Documents/Noshly/frontend/src/pages/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./UpdatePassword.css\";\r\n\r\n// Determine the base URL dynamically\r\nconst baseURL = (() => {\r\n    const { hostname } = window.location;\r\n    if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n        return \"http://127.0.0.1:5000\";\r\n    } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n        return \"https://www.johnnygardner.co.uk\";\r\n    } else {\r\n        return \"https://noshly.onrender.com\";\r\n    }\r\n})();\r\n\r\nfunction UpdatePassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Extract the token from the URL\r\n  const token = new URLSearchParams(location.search).get(\"token\");\r\n\r\n  // Form validation\r\n  const isFormValid = password && confirmPassword && password.length >= 8 && password === confirmPassword;\r\n\r\n  const handleUpdatePassword = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!token) {\r\n      setError(\"Invalid or missing reset token.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${baseURL}/update_password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token, new_password: password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess(\"Password updated successfully. Redirecting to login...\");\r\n        setTimeout(() => navigate(\"/login\"), 3000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || \"Failed to update password.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Network error. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-container\">\r\n      <h2>Reset Your Password</h2>\r\n      <form onSubmit={handleUpdatePassword} id=\"update-form\">\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"New Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"update-button\" disabled={!isFormValid}>\r\n          Update Password\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {success && <div className=\"success-message\">{success}</div>}\r\n      <div className=\"updatePageLinks\">\r\n        <a href=\"/login\">Back to Login</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}