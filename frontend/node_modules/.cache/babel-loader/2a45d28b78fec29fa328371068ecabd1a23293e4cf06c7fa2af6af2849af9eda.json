{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';// Define baseURL dynamically\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const baseURL=(()=>{const{hostname}=window.location;if(hostname===\"127.0.0.1\"||hostname===\"localhost\"){return\"http://127.0.0.1:5000\";}else if(hostname.includes(\"johnnygardner.co.uk\")){return\"https://www.johnnygardner.co.uk\";}else{return\"https://noshly.onrender.com\";}})();const AdminPortal=()=>{const[data,setData]=useState(null);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{const checkAccess=async()=>{const token=localStorage.getItem(\"authToken\");if(!token){// No token, redirect to login page\nnavigate(\"/login\");return;}try{// Decode the token to get user role\nconst decodedToken=JSON.parse(atob(token.split('.')[1]));// Decode JWT\nconst userRole=decodedToken.role;if(userRole!==\"admin\"){// If the user is not an admin, redirect to dashboard\nnavigate(\"/dashboard\");return;}// Fetch data if the user is an admin\nconst response=await fetch(\"\".concat(baseURL,\"/admin\"),{headers:{\"Authorization\":\"Bearer \".concat(token)// Send token in the request\n}});if(!response.ok){throw new Error(\"Unauthorized\");// If not authorized, handle the error\n}const result=await response.json();setData(result);}catch(error){setError(\"You are not authorized to access this page.\");navigate(\"/login\");// Redirect to login if there's an error (invalid token)\n}};checkAccess();},[navigate]);if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Portal\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(data,null,2)})]});};export default AdminPortal;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","baseURL","hostname","window","location","includes","AdminPortal","data","setData","error","setError","navigate","checkAccess","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","userRole","role","response","fetch","concat","headers","ok","Error","result","json","children","stringify"],"sources":["C:/Users/johnn/Documents/Noshly/frontend/src/pages/AdminPortal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Define baseURL dynamically\r\nconst baseURL = (() => {\r\n  const { hostname } = window.location;\r\n  if (hostname === \"127.0.0.1\" || hostname === \"localhost\") {\r\n    return \"http://127.0.0.1:5000\";\r\n  } else if (hostname.includes(\"johnnygardner.co.uk\")) {\r\n    return \"https://www.johnnygardner.co.uk\";\r\n  } else {\r\n    return \"https://noshly.onrender.com\";\r\n  }\r\n})();\r\n\r\nconst AdminPortal = () => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAccess = async () => {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      if (!token) {\r\n        // No token, redirect to login page\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Decode the token to get user role\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT\r\n        const userRole = decodedToken.role;\r\n\r\n        if (userRole !== \"admin\") {\r\n          // If the user is not an admin, redirect to dashboard\r\n          navigate(\"/dashboard\");\r\n          return;\r\n        }\r\n\r\n        // Fetch data if the user is an admin\r\n        const response = await fetch(`${baseURL}/admin`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`, // Send token in the request\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Unauthorized\"); // If not authorized, handle the error\r\n        }\r\n\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        setError(\"You are not authorized to access this page.\");\r\n        navigate(\"/login\");  // Redirect to login if there's an error (invalid token)\r\n      }\r\n    };\r\n\r\n    checkAccess();\r\n  }, [navigate]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Portal</h1>\r\n      <pre>{JSON.stringify(data, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPortal;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,OAAO,CAAG,CAAC,IAAM,CACrB,KAAM,CAAEC,QAAS,CAAC,CAAGC,MAAM,CAACC,QAAQ,CACpC,GAAIF,QAAQ,GAAK,WAAW,EAAIA,QAAQ,GAAK,WAAW,CAAE,CACxD,MAAO,uBAAuB,CAChC,CAAC,IAAM,IAAIA,QAAQ,CAACG,QAAQ,CAAC,qBAAqB,CAAC,CAAE,CACnD,MAAO,iCAAiC,CAC1C,CAAC,IAAM,CACL,MAAO,6BAA6B,CACtC,CACF,CAAC,EAAE,CAAC,CAEJ,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAiB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAE/C,GAAI,CAACF,KAAK,CAAE,CACV;AACAF,QAAQ,CAAC,QAAQ,CAAC,CAClB,OACF,CAEA,GAAI,CACF;AACA,KAAM,CAAAK,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AAC5D,KAAM,CAAAC,QAAQ,CAAGL,YAAY,CAACM,IAAI,CAElC,GAAID,QAAQ,GAAK,OAAO,CAAE,CACxB;AACAV,QAAQ,CAAC,YAAY,CAAC,CACtB,OACF,CAEA;AACA,KAAM,CAAAY,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIxB,OAAO,WAAU,CAC/CyB,OAAO,CAAE,CACP,eAAe,WAAAD,MAAA,CAAYZ,KAAK,CAAI;AACtC,CACF,CAAC,CAAC,CAEF,GAAI,CAACU,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAc,CAAC,CAAE;AACnC,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACpCtB,OAAO,CAACqB,MAAM,CAAC,CACjB,CAAE,MAAOpB,KAAK,CAAE,CACdC,QAAQ,CAAC,6CAA6C,CAAC,CACvDC,QAAQ,CAAC,QAAQ,CAAC,CAAG;AACvB,CACF,CAAC,CAEDC,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACD,QAAQ,CAAC,CAAC,CAEd,GAAIF,KAAK,CAAE,CACT,mBAAOX,IAAA,QAAAiC,QAAA,CAAMtB,KAAK,CAAM,CAAC,CAC3B,CAEA,mBACET,KAAA,QAAA+B,QAAA,eACEjC,IAAA,OAAAiC,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBjC,IAAA,QAAAiC,QAAA,CAAMd,IAAI,CAACe,SAAS,CAACzB,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CAAC,EACvC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}