{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\Documents\\\\Noshly\\\\frontend\\\\src\\\\components\\\\SpeechBubble.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./SpeechBubble.css\"; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechBubble = ({\n  text\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState(\"\");\n  const textRef = useRef(\"\");\n\n  // Animate the text letter by letter\n  useEffect(() => {\n    let i = 0;\n    setDisplayText(\"\"); // Reset text display when text changes\n    textRef.current = \"\"; // Reset the textRef when the input text changes\n\n    const interval = setInterval(() => {\n      if (i < text.length) {\n        textRef.current += text.charAt(i); // Append each character\n        setDisplayText(textRef.current); // Update the displayText state\n        i += 1;\n      }\n      if (i === text.length) {\n        clearInterval(interval);\n      }\n    }, 10); // Adjust the typing speed\n\n    return () => clearInterval(interval); // Cleanup the interval when component unmounts or changes\n  }, [text]); // Re-run the effect if the 'text' prop changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-bubble\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechBubble, \"vmXU6bu0rm4du5szzul9Lv9NbNs=\");\n_c = SpeechBubble;\nexport default SpeechBubble;\nvar _c;\n$RefreshReg$(_c, \"SpeechBubble\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SpeechBubble","text","_s","displayText","setDisplayText","textRef","i","current","interval","setInterval","length","charAt","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/johnn/Documents/Noshly/frontend/src/components/SpeechBubble.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./SpeechBubble.css\"; // Import the CSS for styling\r\n\r\nconst SpeechBubble = ({ text }) => {\r\n  const [displayText, setDisplayText] = useState(\"\");\r\n  const textRef = useRef(\"\");\r\n\r\n  // Animate the text letter by letter\r\n  useEffect(() => {\r\n    let i = 0;\r\n    setDisplayText(\"\"); // Reset text display when text changes\r\n    textRef.current = \"\"; // Reset the textRef when the input text changes\r\n\r\n    const interval = setInterval(() => {\r\n      if (i < text.length) {\r\n        textRef.current += text.charAt(i); // Append each character\r\n        setDisplayText(textRef.current); // Update the displayText state\r\n        i += 1;\r\n      }\r\n\r\n      if (i === text.length) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 10); // Adjust the typing speed\r\n\r\n    return () => clearInterval(interval); // Cleanup the interval when component unmounts or changes\r\n  }, [text]); // Re-run the effect if the 'text' prop changes\r\n\r\n  return (\r\n    <div className=\"speech-bubble\">\r\n      <div className=\"bubble\">\r\n        <p>{displayText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechBubble;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMU,OAAO,GAAGR,MAAM,CAAC,EAAE,CAAC;;EAE1B;EACAD,SAAS,CAAC,MAAM;IACd,IAAIU,CAAC,GAAG,CAAC;IACTF,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACpBC,OAAO,CAACE,OAAO,GAAG,EAAE,CAAC,CAAC;;IAEtB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIH,CAAC,GAAGL,IAAI,CAACS,MAAM,EAAE;QACnBL,OAAO,CAACE,OAAO,IAAIN,IAAI,CAACU,MAAM,CAACL,CAAC,CAAC,CAAC,CAAC;QACnCF,cAAc,CAACC,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC;QACjCD,CAAC,IAAI,CAAC;MACR;MAEA,IAAIA,CAAC,KAAKL,IAAI,CAACS,MAAM,EAAE;QACrBE,aAAa,CAACJ,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,OAAO,MAAMI,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEF,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5Bf,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBf,OAAA;QAAAe,QAAA,EAAIX;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCIF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}